/**
 * 
[[[cog
mod = __import__(MODULE)
cog.outl(" * @file \"%s.c\"" % mod.fileData.getModuleName())
cog.outl(" * @author %s" % mod.fileData.getAuthor())
cog.outl(" * @brief %s" % mod.fileData.getBrief())
cog.outl(" * ")
cog.outl(" * @COMPONENT: %s" % mod.fileData.getModuleName().upper())
cog.outl(" * @VERSION: DRAFT ")
cog.outl(" */")
]]]
[[[end]]]
/************************************************************
  Version History
  -----------------------------------------------------------
  Revision |  Author   |  Change ID  |  Description
  00.00.00 |  AUTHOR   |  DRAFT      |  Initial Creation
************************************************************/

/************************************************************
  DEFINES
************************************************************/

/************************************************************
  INCLUDES
************************************************************/
[[[cog
mod = __import__(MODULE)
cog.outl("#include \"%s.h\"" % mod.fileData.getModuleName())
]]]3
[[[end]]]


/************************************************************
  ENUMS AND TYPEDEFS
************************************************************/

/************************************************************
  LOCAL FUNCTIONS
************************************************************/

[[[cog
mod = __import__(MODULE)

for f in mod.fileData.getPrivateFunctions():
  cog.outl("%s" % f.toBigFuncComment())
  cog.outl("static %s" % f.toFuncPrototype())
  cog.outl("{\n  /* Empty Function Stub */\n}")
  cog.outl("")
]]]
[[[end]]]


/************************************************************
  EXTERN FUNCTIONS
************************************************************/

/************************************************************
  GLOBAL FUNCTIONS
************************************************************/

[[[cog
mod = __import__(MODULE)

for f in mod.fileData.publicFunctions:
  cog.outl("%s" % f.toFuncComment())
  cog.outl("%s" % f.toFuncPrototype())
  cog.outl("{\n  /* Empty Function Stub */\n}")
  cog.outl("\n")
]]]
[[[end]]]
